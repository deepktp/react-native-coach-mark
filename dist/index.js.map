{"version":3,"sources":["../src/components/style.ts","../src/components/SvgMask.tsx","../src/components/ViewMask.tsx","../src/index.ts","../src/components/default-ui/StepNumber.tsx","../src/contexts/CoachMarkProvider.tsx","../src/components/CoachMarkModal.tsx","../src/components/default-ui/Tooltip.tsx","../src/components/default-ui/Button.tsx","../src/hooks/useStateWithAwait.ts","../src/hooks/useStepsMap.ts","../src/hocs/walkthroughable.tsx","../src/components/CoachMarkStep.tsx"],"sourcesContent":["import { StyleSheet } from \"react-native\";\r\n\r\nexport const STEP_NUMBER_RADIUS: number = 14;\r\nexport const STEP_NUMBER_DIAMETER: number = STEP_NUMBER_RADIUS * 2;\r\nexport const ZINDEX: number = 100;\r\nexport const MARGIN: number = 13;\r\nexport const OFFSET_WIDTH: number = 4;\r\nexport const ARROW_SIZE: number = 6;\r\n\r\nexport const styles = StyleSheet.create({\r\n  container: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    top: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    zIndex: ZINDEX,\r\n  },\r\n  arrow: {\r\n    position: \"absolute\",\r\n    borderWidth: ARROW_SIZE,\r\n  },\r\n  tooltip: {\r\n    position: \"absolute\",\r\n    paddingTop: 15,\r\n    paddingHorizontal: 15,\r\n    backgroundColor: \"#fff\",\r\n    borderRadius: 3,\r\n    overflow: \"hidden\",\r\n  },\r\n  tooltipText: {},\r\n  tooltipContainer: {\r\n    flex: 1,\r\n  },\r\n  stepNumberContainer: {\r\n    position: \"absolute\",\r\n    width: STEP_NUMBER_DIAMETER,\r\n    height: STEP_NUMBER_DIAMETER,\r\n    overflow: \"hidden\",\r\n    zIndex: ZINDEX + 1,\r\n  },\r\n  stepNumber: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    borderWidth: 2,\r\n    borderRadius: STEP_NUMBER_RADIUS,\r\n    borderColor: \"#FFFFFF\",\r\n    backgroundColor: \"#27ae60\",\r\n  },\r\n  stepNumberText: {\r\n    fontSize: 10,\r\n    backgroundColor: \"transparent\",\r\n    color: \"#FFFFFF\",\r\n  },\r\n  button: {\r\n    padding: 10,\r\n  },\r\n  buttonText: {\r\n    color: \"#27ae60\",\r\n  },\r\n  bottomBar: {\r\n    marginTop: 10,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  overlayRectangle: {\r\n    position: \"absolute\",\r\n    backgroundColor: \"rgba(0,0,0,0.2)\",\r\n    left: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    right: 0,\r\n  },\r\n  overlayContainer: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    right: 0,\r\n  },\r\n});\r\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  Animated,\r\n  Dimensions,\r\n  Easing,\r\n  View,\r\n  type LayoutChangeEvent,\r\n} from \"react-native\";\r\nimport Svg, { Path } from \"react-native-svg\";\r\n\r\nimport type { MaskProps, SvgMaskPathFunction, ValueXY } from \"../types\";\r\n\r\nconst AnimatedSvgPath = Animated.createAnimatedComponent(Path);\r\nconst windowDimensions = Dimensions.get(\"window\");\r\n\r\nconst defaultSvgPath: SvgMaskPathFunction = ({\r\n  size,\r\n  position,\r\n  canvasSize,\r\n}): string => {\r\n  const positionX = (position.x as any)._value as number;\r\n  const positionY = (position.y as any)._value as number;\r\n  const sizeX = (size.x as any)._value as number;\r\n  const sizeY = (size.y as any)._value as number;\r\n\r\n  return `M0,0H${canvasSize.x}V${canvasSize.y}H0V0ZM${positionX},${positionY}H${\r\n    positionX + sizeX\r\n  }V${positionY + sizeY}H${positionX}V${positionY}Z`;\r\n};\r\n\r\nexport const SvgMask = ({\r\n  size,\r\n  position,\r\n  style,\r\n  easing = Easing.linear,\r\n  animationDuration = 300,\r\n  animated,\r\n  backdropColor,\r\n  svgMaskPath = defaultSvgPath,\r\n  onClick,\r\n  currentStep,\r\n}: MaskProps) => {\r\n  const [canvasSize, setCanvasSize] = useState<ValueXY>({\r\n    x: windowDimensions.width,\r\n    y: windowDimensions.height,\r\n  });\r\n  const sizeValue = useRef<Animated.ValueXY>(\r\n    new Animated.ValueXY(size)\r\n  ).current;\r\n  const positionValue = useRef<Animated.ValueXY>(\r\n    new Animated.ValueXY(position)\r\n  ).current;\r\n  const maskRef = useRef<any>(null);\r\n\r\n  const animationListener = useCallback(() => {\r\n    const d: string = svgMaskPath({\r\n      size: sizeValue,\r\n      position: positionValue,\r\n      canvasSize,\r\n      step: currentStep,\r\n    });\r\n\r\n    if (maskRef.current) {\r\n      maskRef.current.setNativeProps({ d });\r\n    }\r\n  }, [canvasSize, currentStep, svgMaskPath, positionValue, sizeValue]);\r\n\r\n  const animate = useCallback(\r\n    (toSize: ValueXY = size, toPosition: ValueXY = position) => {\r\n      if (animated) {\r\n        Animated.parallel([\r\n          Animated.timing(sizeValue, {\r\n            toValue: toSize,\r\n            duration: animationDuration,\r\n            easing,\r\n            useNativeDriver: false,\r\n          }),\r\n          Animated.timing(positionValue, {\r\n            toValue: toPosition,\r\n            duration: animationDuration,\r\n            easing,\r\n            useNativeDriver: false,\r\n          }),\r\n        ]).start();\r\n      } else {\r\n        sizeValue.setValue(toSize);\r\n        positionValue.setValue(toPosition);\r\n      }\r\n    },\r\n    [\r\n      animated,\r\n      animationDuration,\r\n      easing,\r\n      positionValue,\r\n      position,\r\n      size,\r\n      sizeValue,\r\n    ]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const id = positionValue.addListener(animationListener);\r\n    return () => {\r\n      positionValue.removeListener(id);\r\n    };\r\n  }, [animationListener, positionValue]);\r\n\r\n  useEffect(() => {\r\n    if (size && position) {\r\n      animate(size, position);\r\n    }\r\n  }, [animate, position, size]);\r\n\r\n  const handleLayout = ({\r\n    nativeEvent: {\r\n      layout: { width, height },\r\n    },\r\n  }: LayoutChangeEvent) => {\r\n    setCanvasSize({\r\n      x: width,\r\n      y: height,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <View\r\n      style={style}\r\n      onLayout={handleLayout}\r\n      onStartShouldSetResponder={onClick}\r\n    >\r\n      {canvasSize ? (\r\n        <Svg pointerEvents=\"none\" width={canvasSize.x} height={canvasSize.y}>\r\n          <AnimatedSvgPath\r\n            ref={maskRef}\r\n            fill={backdropColor}\r\n            fillRule=\"evenodd\"\r\n            strokeWidth={1}\r\n            d={svgMaskPath({\r\n              size: sizeValue,\r\n              position: positionValue,\r\n              canvasSize,\r\n              step: currentStep,\r\n            })}\r\n          />\r\n        </Svg>\r\n      ) : null}\r\n    </View>\r\n  );\r\n};\r\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\n\r\nimport { Animated, View } from \"react-native\";\r\nimport { styles } from \"./style\";\r\n\r\nimport type { MaskProps, ValueXY } from \"../types\";\r\n\r\nexport const ViewMask = (props: MaskProps) => {\r\n  const sizeValue = useRef<Animated.ValueXY>(\r\n    new Animated.ValueXY(props.size)\r\n  ).current;\r\n  const positionValue = useRef<Animated.ValueXY>(\r\n    new Animated.ValueXY(props.position)\r\n  ).current;\r\n  const [animated, setAnimated] = useState(false);\r\n\r\n  const animate = useCallback(\r\n    (size: ValueXY = props.size, position: ValueXY = props.position): void => {\r\n      if (animated) {\r\n        Animated.parallel([\r\n          Animated.timing(sizeValue, {\r\n            toValue: size,\r\n            duration: props.animationDuration,\r\n            easing: props.easing,\r\n            useNativeDriver: false,\r\n          }),\r\n          Animated.timing(positionValue, {\r\n            toValue: position,\r\n            duration: props.animationDuration,\r\n            easing: props.easing,\r\n            useNativeDriver: false,\r\n          }),\r\n        ]).start();\r\n      } else {\r\n        sizeValue.setValue(size);\r\n        positionValue.setValue(position);\r\n        setAnimated(props.animated);\r\n      }\r\n    },\r\n    [\r\n      animated,\r\n      positionValue,\r\n      props.animated,\r\n      props.animationDuration,\r\n      props.easing,\r\n      props.position,\r\n      props.size,\r\n      sizeValue,\r\n    ]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (props.position || props.size) {\r\n      animate(props.size, props.position);\r\n    }\r\n  }, [animate, props.position, props.size]);\r\n\r\n  const width = props.layout ? props.layout.width : 500;\r\n  const height = props.layout ? props.layout.height : 500;\r\n\r\n  const leftOverlayRight = Animated.add(\r\n    width,\r\n    Animated.multiply(positionValue.x, -1)\r\n  );\r\n  const rightOverlayLeft = Animated.add(sizeValue.x, positionValue.x);\r\n  const bottomOverlayTopBoundary = Animated.add(sizeValue.y, positionValue.y);\r\n  const topOverlayBottomBoundary = Animated.add(\r\n    height,\r\n    Animated.multiply(-1, positionValue.y)\r\n  );\r\n  const verticalOverlayLeftBoundary = positionValue.x;\r\n  const verticalOverlayRightBoundary = Animated.add(\r\n    width,\r\n    Animated.multiply(-1, rightOverlayLeft)\r\n  );\r\n\r\n  return (\r\n    <View style={props.style} onStartShouldSetResponder={props.onClick}>\r\n      {[\r\n        {\r\n          right: leftOverlayRight,\r\n          backgroundColor: props.backdropColor,\r\n        },\r\n        {\r\n          left: rightOverlayLeft,\r\n          backgroundColor: props.backdropColor,\r\n        },\r\n        {\r\n          top: bottomOverlayTopBoundary,\r\n          left: verticalOverlayLeftBoundary,\r\n          right: verticalOverlayRightBoundary,\r\n          backgroundColor: props.backdropColor,\r\n        },\r\n        {\r\n          bottom: topOverlayBottomBoundary,\r\n          left: verticalOverlayLeftBoundary,\r\n          right: verticalOverlayRightBoundary,\r\n          backgroundColor: props.backdropColor,\r\n        },\r\n      ].map((style, index) => (\r\n        <Animated.View key={index} style={[styles.overlayRectangle, style]} />\r\n      ))}\r\n    </View>\r\n  );\r\n};\r\n","import { StepNumber } from \"./components/default-ui/StepNumber\";\r\nimport { Tooltip } from \"./components/default-ui/Tooltip\";\r\nexport { walkthroughable } from \"./hocs/walkthroughable\";\r\nexport { CoachMarkStep } from \"./components/CoachMarkStep\";\r\nexport { CoachMarkProvider, useCoachMark } from \"./contexts/CoachMarkProvider\";\r\nexport type { CoachMarkOptions as CoachMarkProps, TooltipProps } from \"./types\";\r\n\r\nexport const DefaultUI = {\r\n  StepNumber,\r\n  Tooltip,\r\n};\r\n","import React, { type FunctionComponent } from \"react\";\r\nimport { Text, View } from \"react-native\";\r\nimport { useCoachMark } from \"../../contexts/CoachMarkProvider\";\r\n\r\nimport { styles } from \"../style\";\r\n\r\nexport const StepNumber: FunctionComponent<unknown> = () => {\r\n  const { currentStepNumber } = useCoachMark();\r\n\r\n  return (\r\n    <View style={styles.stepNumber}>\r\n      <Text style={styles.stepNumberText}>{currentStepNumber}</Text>\r\n    </View>\r\n  );\r\n};\r\n","import mitt, { type Emitter } from \"mitt\";\r\nimport React, {\r\n  createContext,\r\n  useCallback,\r\n  useContext,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n  type PropsWithChildren,\r\n} from \"react\";\r\nimport { findNodeHandle, type ScrollView } from \"react-native\";\r\nimport {\r\n  CoachMarkModal,\r\n  type CoachMarkModalHandle\r\n} from \"../components/CoachMarkModal\";\r\nimport { OFFSET_WIDTH } from \"../components/style\";\r\nimport { useStateWithAwait } from \"../hooks/useStateWithAwait\";\r\nimport { useStepsMap } from \"../hooks/useStepsMap\";\r\nimport { type CoachMarkOptions, type Step } from \"../types\";\r\n\r\n// eslint-disable-next-line @typescript-eslint/consistent-type-definitions\r\ntype Events = {\r\n  start: undefined;\r\n  stop: undefined;\r\n  stepChange: Step | undefined;\r\n};\r\n\r\ninterface CoachMarkContextType {\r\n  registerStep: (step: Step) => void;\r\n  unregisterStep: (stepName: string) => void;\r\n  currentStep: Step | undefined;\r\n  start: (\r\n    fromStep?: string,\r\n    suppliedScrollView?: ScrollView | null\r\n  ) => Promise<void>;\r\n  stop: () => Promise<void>;\r\n  goToNext: () => Promise<void>;\r\n  goToNth: (n: number) => Promise<void>;\r\n  goToPrev: () => Promise<void>;\r\n  visible: boolean;\r\n  coachMarkEvents: Emitter<Events>;\r\n  isFirstStep: boolean;\r\n  isLastStep: boolean;\r\n  currentStepNumber: number;\r\n  totalStepsNumber: number;\r\n}\r\n\r\n/*\r\nThis is the maximum wait time for the steps to be registered before starting the tutorial\r\nAt 60fps means 2 seconds\r\n*/\r\nconst MAX_START_TRIES = 120;\r\n\r\nconst CoachMarkContext = createContext<CoachMarkContextType | undefined>(undefined);\r\n\r\nexport const CoachMarkProvider = ({\r\n  verticalOffset = 0,\r\n  children,\r\n  ...rest\r\n}: PropsWithChildren<CoachMarkOptions>) => {\r\n  const startTries = useRef(0);\r\n  const coachMarkEvents = useRef(mitt<Events>()).current;\r\n  const modal = useRef<CoachMarkModalHandle | null>(null);\r\n\r\n  const [visible, setVisibility] = useStateWithAwait(false);\r\n  const [scrollView, setScrollView] = useState<ScrollView | null>(null);\r\n\r\n  const {\r\n    currentStep,\r\n    currentStepNumber,\r\n    totalStepsNumber,\r\n    getFirstStep,\r\n    getPrevStep,\r\n    getNextStep,\r\n    getNthStep,\r\n    isFirstStep,\r\n    isLastStep,\r\n    setCurrentStepState,\r\n    steps,\r\n    registerStep,\r\n    unregisterStep,\r\n  } = useStepsMap();\r\n\r\n  const moveModalToStep = useCallback(\r\n    async (step: Step) => {\r\n      const size = await step?.measure();\r\n\r\n      if (!size) {\r\n        return;\r\n      }\r\n\r\n      await modal.current?.animateMove({\r\n        width: size.width + OFFSET_WIDTH,\r\n        height: size.height + OFFSET_WIDTH,\r\n        x: size.x - OFFSET_WIDTH / 2,\r\n        y: size.y - OFFSET_WIDTH / 2 + verticalOffset,\r\n      });\r\n    },\r\n    [verticalOffset]\r\n  );\r\n\r\n  const setCurrentStep = useCallback(\r\n    async (step?: Step, move: boolean = true) => {\r\n      setCurrentStepState(step);\r\n      coachMarkEvents.emit(\"stepChange\", step);\r\n\r\n      if (scrollView != null) {\r\n        const nodeHandle = findNodeHandle(scrollView);\r\n        if (nodeHandle) {\r\n          step?.wrapperRef.current?.measureLayout(\r\n            nodeHandle,\r\n            (_x, y, _w, h) => {\r\n              const yOffset = y > 0 ? y - h / 2 : 0;\r\n              scrollView.scrollTo({ y: yOffset, animated: false });\r\n            }\r\n          );\r\n        }\r\n      }\r\n\r\n      setTimeout(\r\n        () => {\r\n          if (move && step) {\r\n            void moveModalToStep(step);\r\n          }\r\n        },\r\n        scrollView != null ? 100 : 0\r\n      );\r\n    },\r\n    [coachMarkEvents, moveModalToStep, scrollView, setCurrentStepState]\r\n  );\r\n\r\n  const start = useCallback(\r\n    async (fromStep?: string, suppliedScrollView: ScrollView | null = null) => {\r\n      if (scrollView == null) {\r\n        setScrollView(suppliedScrollView);\r\n      }\r\n\r\n      const currentStep = fromStep ? steps[fromStep] : getFirstStep();\r\n\r\n      if (startTries.current > MAX_START_TRIES) {\r\n        startTries.current = 0;\r\n        return;\r\n      }\r\n\r\n      if (currentStep == null) {\r\n        startTries.current += 1;\r\n        requestAnimationFrame(() => {\r\n          void start(fromStep);\r\n        });\r\n      } else {\r\n        coachMarkEvents.emit(\"start\");\r\n        await setCurrentStep(currentStep);\r\n        await moveModalToStep(currentStep);\r\n        await setVisibility(true);\r\n        startTries.current = 0;\r\n      }\r\n    },\r\n    [\r\n      coachMarkEvents,\r\n      getFirstStep,\r\n      moveModalToStep,\r\n      scrollView,\r\n      setCurrentStep,\r\n      setVisibility,\r\n      steps,\r\n    ]\r\n  );\r\n\r\n  const stop = useCallback(async () => {\r\n    await setVisibility(false);\r\n    coachMarkEvents.emit(\"stop\");\r\n  }, [coachMarkEvents, setVisibility]);\r\n\r\n  const next = useCallback(async () => {\r\n    await setCurrentStep(getNextStep());\r\n  }, [getNextStep, setCurrentStep]);\r\n\r\n  const nth = useCallback(\r\n    async (n: number) => {\r\n      await setCurrentStep(getNthStep(n));\r\n    },\r\n    [getNthStep, setCurrentStep]\r\n  );\r\n\r\n  const prev = useCallback(async () => {\r\n    await setCurrentStep(getPrevStep());\r\n  }, [getPrevStep, setCurrentStep]);\r\n\r\n  const value = useMemo(\r\n    () => ({\r\n      registerStep,\r\n      unregisterStep,\r\n      currentStep,\r\n      start,\r\n      stop,\r\n      visible,\r\n      coachMarkEvents,\r\n      goToNext: next,\r\n      goToNth: nth,\r\n      goToPrev: prev,\r\n      isFirstStep,\r\n      isLastStep,\r\n      currentStepNumber,\r\n      totalStepsNumber,\r\n    }),\r\n    [\r\n      registerStep,\r\n      unregisterStep,\r\n      currentStep,\r\n      start,\r\n      stop,\r\n      visible,\r\n      coachMarkEvents,\r\n      next,\r\n      nth,\r\n      prev,\r\n      isFirstStep,\r\n      isLastStep,\r\n      currentStepNumber,\r\n      totalStepsNumber,\r\n    ]\r\n  );\r\n\r\n  return (\r\n    <CoachMarkContext.Provider value={value}>\r\n      <>\r\n        <CoachMarkModal\r\n          ref={modal}\r\n          {...rest}\r\n        />\r\n        {children}\r\n      </>\r\n    </CoachMarkContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCoachMark = () => {\r\n  const value = useContext(CoachMarkContext);\r\n  if (value == null) {\r\n    throw new Error(\"You must wrap your app inside CoachMarkProvider\");\r\n  }\r\n\r\n  return value;\r\n};\r\n","import React, {\r\n  forwardRef,\r\n  useCallback,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport {\r\n  Animated,\r\n  Easing,\r\n  Modal,\r\n  NativeModules,\r\n  Platform,\r\n  StatusBar,\r\n  View,\r\n  type LayoutChangeEvent,\r\n  type LayoutRectangle,\r\n  type ViewStyle,\r\n} from \"react-native\";\r\nimport { useCoachMark } from \"../contexts/CoachMarkProvider\";\r\nimport type { CoachMarkOptions } from \"../types\";\r\nimport { StepNumber } from \"./default-ui/StepNumber\";\r\nimport { Tooltip } from \"./default-ui/Tooltip\";\r\nimport {\r\n  ARROW_SIZE,\r\n  MARGIN,\r\n  STEP_NUMBER_DIAMETER,\r\n  STEP_NUMBER_RADIUS,\r\n  styles,\r\n} from \"./style\";\r\n\r\ntype Props = CoachMarkOptions;\r\n\r\nconst noop = () => {};\r\n\r\nconst makeDefaultLayout = (): LayoutRectangle => ({\r\n  x: 0,\r\n  y: 0,\r\n  width: 0,\r\n  height: 0,\r\n});\r\n\r\nexport interface CoachMarkModalHandle {\r\n  animateMove: (obj: LayoutRectangle) => Promise<void>;\r\n}\r\n\r\nexport const CoachMarkModal = forwardRef<CoachMarkModalHandle, Props>(\r\n  function CoachMarkModal(\r\n    {\r\n      easing = Easing.elastic(0.7),\r\n      animationDuration = 400,\r\n      tooltipComponent: TooltipComponent = Tooltip,\r\n      tooltipStyle = {},\r\n      stepNumberComponent: StepNumberComponent = StepNumber,\r\n      overlay = typeof NativeModules.RNSVGSvgViewManager !== \"undefined\"\r\n        ? \"svg\"\r\n        : \"view\",\r\n      animated = typeof NativeModules.RNSVGSvgViewManager !== \"undefined\",\r\n      androidStatusBarVisible = false,\r\n      backdropColor = \"rgba(0, 0, 0, 0.4)\",\r\n      labels = {\r\n        finish: \"Finish\",\r\n        next: \"Next\",\r\n        previous: \"Previous\",\r\n        skip: \"Skip\",\r\n      },\r\n      svgMaskPath,\r\n      stopOnOutsideClick = false,\r\n      arrowColor = \"#fff\",\r\n      arrowSize = ARROW_SIZE,\r\n      margin = MARGIN,\r\n    },\r\n    ref,\r\n  ) {\r\n    const { stop, currentStep, visible } = useCoachMark();\r\n    const [tooltipStyles, setTooltipStyles] = useState({});\r\n    const [arrowStyles, setArrowStyles] = useState({});\r\n    const [animatedValues] = useState({\r\n      top: new Animated.Value(0),\r\n      stepNumberLeft: new Animated.Value(0),\r\n    });\r\n    const layoutRef = useRef(makeDefaultLayout());\r\n    const [layout, setLayout] = useState<LayoutRectangle | undefined>(\r\n      undefined,\r\n    );\r\n    const [maskRect, setMaskRect] = useState<LayoutRectangle | undefined>();\r\n\r\n    const [isAnimated, setIsAnimated] = useState(false);\r\n    const [containerVisible, setContainerVisible] = useState(false);\r\n\r\n    useEffect(() => {\r\n      if (visible) {\r\n        setContainerVisible(true);\r\n      }\r\n    }, [visible]);\r\n\r\n    useEffect(() => {\r\n      if (!visible) {\r\n        reset();\r\n      }\r\n    }, [visible]);\r\n\r\n    const handleLayoutChange = ({\r\n      nativeEvent: { layout: newLayout },\r\n    }: LayoutChangeEvent) => {\r\n      layoutRef.current = newLayout;\r\n    };\r\n\r\n    const measure = async (): Promise<LayoutRectangle> => {\r\n      return await new Promise((resolve) => {\r\n        const updateLayout = () => {\r\n          if (layoutRef.current.width !== 0) {\r\n            resolve(layoutRef.current);\r\n          } else {\r\n            requestAnimationFrame(updateLayout);\r\n          }\r\n        };\r\n\r\n        updateLayout();\r\n      });\r\n    };\r\n\r\n    const _animateMove = useCallback(\r\n      async (rect: LayoutRectangle) => {\r\n        const newMeasuredLayout = await measure();\r\n        if (!androidStatusBarVisible && Platform.OS === \"android\") {\r\n          rect.y -= StatusBar.currentHeight ?? 0;\r\n        }\r\n\r\n        let stepNumberLeft = rect.x - STEP_NUMBER_RADIUS;\r\n\r\n        if (stepNumberLeft < 0) {\r\n          stepNumberLeft = rect.x + rect.width - STEP_NUMBER_RADIUS;\r\n          if (stepNumberLeft > newMeasuredLayout.width - STEP_NUMBER_DIAMETER) {\r\n            stepNumberLeft = newMeasuredLayout.width - STEP_NUMBER_DIAMETER;\r\n          }\r\n        }\r\n\r\n        const center = {\r\n          x: rect.x + rect.width / 2,\r\n          y: rect.y + rect.height / 2,\r\n        };\r\n\r\n        const relativeToLeft = center.x;\r\n        const relativeToTop = center.y;\r\n        const relativeToBottom = Math.abs(center.y - newMeasuredLayout.height);\r\n        const relativeToRight = Math.abs(center.x - newMeasuredLayout.width);\r\n\r\n        const verticalPosition =\r\n          relativeToBottom > relativeToTop ? \"bottom\" : \"top\";\r\n        const horizontalPosition =\r\n          relativeToLeft > relativeToRight ? \"left\" : \"right\";\r\n\r\n        const tooltip: ViewStyle = {};\r\n        const arrow: ViewStyle = {};\r\n\r\n        arrow.position = \"absolute\";\r\n\r\n        if (verticalPosition === \"bottom\") {\r\n          tooltip.top = rect.y + rect.height + margin;\r\n          arrow.borderBottomColor = arrowColor;\r\n          arrow.borderTopColor = \"transparent\";\r\n          arrow.borderLeftColor = \"transparent\";\r\n          arrow.borderRightColor = \"transparent\";\r\n          arrow.top = tooltip.top - arrowSize * 2;\r\n        } else {\r\n          tooltip.bottom = newMeasuredLayout.height - (rect.y - margin);\r\n          arrow.borderTopColor = arrowColor;\r\n          arrow.borderLeftColor = \"transparent\";\r\n          arrow.borderRightColor = \"transparent\";\r\n          arrow.borderBottomColor = \"transparent\";\r\n          arrow.bottom = tooltip.bottom - arrowSize * 2;\r\n        }\r\n\r\n        if (horizontalPosition === \"left\") {\r\n          tooltip.right = Math.max(\r\n            newMeasuredLayout.width - (rect.x + rect.width),\r\n            0,\r\n          );\r\n          tooltip.right =\r\n            tooltip.right === 0 ? tooltip.right + margin : tooltip.right;\r\n          tooltip.maxWidth = newMeasuredLayout.width - tooltip.right - margin;\r\n          arrow.right = tooltip.right + margin;\r\n        } else {\r\n          tooltip.left = Math.max(rect.x, 0);\r\n          tooltip.left =\r\n            tooltip.left === 0 ? tooltip.left + margin : tooltip.left;\r\n          tooltip.maxWidth = newMeasuredLayout.width - tooltip.left - margin;\r\n          arrow.left = tooltip.left + margin;\r\n        }\r\n\r\n        sanitize(arrow);\r\n        sanitize(tooltip);\r\n        sanitize(rect);\r\n\r\n        const animate = [\r\n          [\"top\", rect.y],\r\n          [\"stepNumberLeft\", stepNumberLeft],\r\n        ] as const;\r\n\r\n        if (isAnimated) {\r\n          Animated.parallel(\r\n            animate.map(([key, value]) => {\r\n              return Animated.timing(animatedValues[key], {\r\n                toValue: value,\r\n                duration: animationDuration,\r\n                easing,\r\n                useNativeDriver: false,\r\n              });\r\n            }),\r\n          ).start();\r\n        } else {\r\n          animate.forEach(([key, value]) => {\r\n            animatedValues[key].setValue(value);\r\n          });\r\n        }\r\n\r\n        setTooltipStyles(tooltip);\r\n        setArrowStyles(arrow);\r\n        setLayout(newMeasuredLayout);\r\n        setMaskRect({\r\n          width: rect.width,\r\n          height: rect.height,\r\n          x: Math.floor(Math.max(rect.x, 0)),\r\n          y: Math.floor(Math.max(rect.y, 0)),\r\n        });\r\n      },\r\n      [\r\n        androidStatusBarVisible,\r\n        animatedValues,\r\n        animationDuration,\r\n        arrowColor,\r\n        easing,\r\n        isAnimated,\r\n        arrowSize,\r\n        margin,\r\n      ],\r\n    );\r\n\r\n    const animateMove = useCallback<CoachMarkModalHandle[\"animateMove\"]>(\r\n      async (rect) => {\r\n        await new Promise<void>((resolve) => {\r\n          const frame = async () => {\r\n            await _animateMove(rect);\r\n            resolve();\r\n          };\r\n\r\n          setContainerVisible(true);\r\n          requestAnimationFrame(() => {\r\n            void frame();\r\n          });\r\n        });\r\n      },\r\n      [_animateMove],\r\n    );\r\n\r\n    const reset = () => {\r\n      setIsAnimated(false);\r\n      setContainerVisible(false);\r\n      setLayout(undefined);\r\n    };\r\n\r\n    const handleStop = () => {\r\n      reset();\r\n      void stop();\r\n    };\r\n\r\n    const handleMaskClick = () => {\r\n      if (stopOnOutsideClick) {\r\n        handleStop();\r\n      }\r\n    };\r\n\r\n    useImperativeHandle(\r\n      ref,\r\n      () => {\r\n        return {\r\n          animateMove,\r\n        };\r\n      },\r\n      [animateMove],\r\n    );\r\n\r\n    const modalVisible = containerVisible || visible;\r\n    const contentVisible = layout != null && containerVisible;\r\n\r\n    if (!modalVisible) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <Modal\r\n        animationType=\"none\"\r\n        visible\r\n        onRequestClose={noop}\r\n        transparent\r\n        supportedOrientations={[\"portrait\", \"landscape\"]}\r\n      >\r\n        <View style={styles.container} onLayout={handleLayoutChange}>\r\n          {contentVisible && renderMask()}\r\n          {contentVisible && renderTooltip()}\r\n        </View>\r\n      </Modal>\r\n    );\r\n\r\n    function renderMask() {\r\n      const MaskComponent =\r\n        overlay === \"svg\"\r\n          ? // eslint-disable-next-line @typescript-eslint/no-var-requires\r\n            require(\"./SvgMask\").SvgMask\r\n          : // eslint-disable-next-line @typescript-eslint/no-var-requires\r\n            require(\"./ViewMask\").ViewMask;\r\n\r\n      const size = maskRect && {\r\n        x: maskRect.width,\r\n        y: maskRect.height,\r\n      };\r\n\r\n      const position = maskRect;\r\n\r\n      return (\r\n        <MaskComponent\r\n          animated={animated}\r\n          layout={layout}\r\n          style={styles.overlayContainer}\r\n          size={size}\r\n          position={position}\r\n          easing={easing}\r\n          animationDuration={animationDuration}\r\n          backdropColor={backdropColor}\r\n          svgMaskPath={svgMaskPath}\r\n          onClick={handleMaskClick}\r\n          currentStep={currentStep}\r\n        />\r\n      );\r\n    }\r\n\r\n    function renderTooltip() {\r\n      if (!currentStep) {\r\n        return null;\r\n      }\r\n      return (\r\n        <>\r\n          <Animated.View\r\n            key=\"stepNumber\"\r\n            style={[\r\n              styles.stepNumberContainer,\r\n              {\r\n                left: animatedValues.stepNumberLeft,\r\n                top: Animated.add(animatedValues.top, -STEP_NUMBER_RADIUS),\r\n              },\r\n            ]}\r\n          >\r\n            <StepNumberComponent />\r\n          </Animated.View>\r\n          {!!arrowSize && (\r\n            <Animated.View key=\"arrow\" style={[styles.arrow, arrowStyles]} />\r\n          )}\r\n          <Animated.View\r\n            key=\"tooltip\"\r\n            style={[styles.tooltip, tooltipStyles, tooltipStyle]}\r\n          >\r\n            <TooltipComponent labels={labels} />\r\n          </Animated.View>\r\n        </>\r\n      );\r\n    }\r\n  },\r\n);\r\n\r\nconst floorify = (obj: Record<string, any>) => {\r\n  Object.keys(obj).forEach((key) => {\r\n    if (typeof obj[key] === \"number\") {\r\n      obj[key] = Math.floor(obj[key]);\r\n    }\r\n  });\r\n};\r\n\r\nconst removeNan = (obj: Record<string, any>) => {\r\n  Object.keys(obj).forEach((key) => {\r\n    if (typeof obj[key] === \"number\" && isNaN(obj[key])) {\r\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\r\n      delete obj[key];\r\n    }\r\n  });\r\n};\r\n\r\nconst sanitize = (obj: Record<any, any>) => {\r\n  floorify(obj);\r\n  removeNan(obj);\r\n};\r\n","import React from \"react\";\r\nimport { Text, TouchableOpacity, View } from \"react-native\";\r\n\r\nimport { Button } from \"./Button\";\r\n\r\nimport { styles } from \"../style\";\r\n\r\nimport type { TooltipProps } from \"../../types\";\r\nimport { useCoachMark } from \"../../contexts/CoachMarkProvider\";\r\n\r\nexport const Tooltip = ({ labels }: TooltipProps) => {\r\n  const { goToNext, goToPrev, stop, currentStep, isFirstStep, isLastStep } =\r\n    useCoachMark();\r\n\r\n  const handleStop = () => {\r\n    void stop();\r\n  };\r\n  const handleNext = () => {\r\n    void goToNext();\r\n  };\r\n\r\n  const handlePrev = () => {\r\n    void goToPrev();\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <View style={styles.tooltipContainer}>\r\n        { typeof currentStep?.text === \"string\" ? (\r\n          <Text style={styles.tooltipText}>{currentStep.text}</Text>\r\n        ) : (\r\n          currentStep?.text\r\n        ) }\r\n      </View>\r\n      <View style={[styles.bottomBar]}>\r\n        {!isLastStep ? (\r\n          <TouchableOpacity onPress={handleStop}>\r\n            <Button>{labels.skip}</Button>\r\n          </TouchableOpacity>\r\n        ) : null}\r\n        {!isFirstStep ? (\r\n          <TouchableOpacity onPress={handlePrev}>\r\n            <Button>{labels.previous}</Button>\r\n          </TouchableOpacity>\r\n        ) : null}\r\n        {!isLastStep ? (\r\n          <TouchableOpacity onPress={handleNext}>\r\n            <Button>{labels.next}</Button>\r\n          </TouchableOpacity>\r\n        ) : (\r\n          <TouchableOpacity onPress={handleStop}>\r\n            <Button>{labels.finish}</Button>\r\n          </TouchableOpacity>\r\n        )}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  type StyleProp,\r\n  type ViewStyle,\r\n  type TextStyle,\r\n  type TextProps,\r\n} from \"react-native\";\r\n\r\nimport { styles } from \"../style\";\r\n\r\ntype Props = {\r\n  wrapperStyle?: StyleProp<ViewStyle>;\r\n  style?: StyleProp<TextStyle>;\r\n} & Omit<TextProps, \"style\">;\r\n\r\nexport const Button = ({ wrapperStyle, style, ...rest }: Props) => (\r\n  <View style={[styles.button, wrapperStyle]}>\r\n    <Text style={[styles.buttonText, style]} {...rest} />\r\n  </View>\r\n);\r\n","import { useEffect, useRef, useState } from \"react\";\r\n\r\n/**\r\n * A hook like useState that allows you to use await the setter\r\n */\r\nexport const useStateWithAwait = <T = any>(\r\n  initialState: T\r\n): [T, (newValue: T) => Promise<void>] => {\r\n  const endPending = useRef(() => {});\r\n  const newDesiredValue = useRef(initialState);\r\n\r\n  const [state, setState] = useState(initialState);\r\n\r\n  const setStateWithAwait = async (newState: T) => {\r\n    const pending = new Promise<void>((resolve) => {\r\n      endPending.current = resolve;\r\n    });\r\n    newDesiredValue.current = newState;\r\n    setState(newState);\r\n    await pending;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (state === newDesiredValue.current) {\r\n      endPending.current();\r\n    }\r\n  }, [state]);\r\n\r\n  return [state, setStateWithAwait];\r\n};\r\n","import { useCallback, useMemo, useReducer, useState } from \"react\";\r\nimport { type Step, type StepsMap } from \"../types\";\r\n\r\ntype Action =\r\n  | {\r\n      type: \"register\";\r\n      step: Step;\r\n    }\r\n  | {\r\n      type: \"unregister\";\r\n      stepName: string;\r\n    };\r\n\r\nexport const useStepsMap = () => {\r\n  const [currentStep, setCurrentStepState] = useState<Step | undefined>(\r\n    undefined\r\n  );\r\n\r\n  const [steps, dispatch] = useReducer((state: StepsMap, action: Action) => {\r\n    switch (action.type) {\r\n      case \"register\":\r\n        return {\r\n          ...state,\r\n          [action.step.name]: action.step,\r\n        };\r\n      case \"unregister\": {\r\n        const { [action.stepName]: _, ...rest } = state;\r\n        return rest;\r\n      }\r\n      default:\r\n        return state;\r\n    }\r\n  }, {});\r\n\r\n  const orderedSteps = useMemo(\r\n    () => Object.values(steps).sort((a, b) => a.order - b.order),\r\n    [steps]\r\n  );\r\n\r\n  const stepIndex = useCallback(\r\n    (step = currentStep) =>\r\n      step\r\n        ? orderedSteps.findIndex(\r\n            (stepCandidate) => stepCandidate.order === step.order\r\n          )\r\n        : -1,\r\n    [currentStep, orderedSteps]\r\n  );\r\n\r\n  const currentStepNumber = useMemo(\r\n    (step = currentStep) => stepIndex(step) + 1,\r\n    [currentStep, stepIndex]\r\n  );\r\n\r\n  const totalStepsNumber = useMemo(() => orderedSteps.length, [orderedSteps]);\r\n\r\n  const getFirstStep = useCallback(() => orderedSteps[0], [orderedSteps]);\r\n\r\n  const getLastStep = useCallback(\r\n    () => orderedSteps[orderedSteps.length - 1],\r\n    [orderedSteps]\r\n  );\r\n\r\n  const getPrevStep = useCallback(\r\n    (step = currentStep) => step && orderedSteps[stepIndex(step) - 1],\r\n    [currentStep, stepIndex, orderedSteps]\r\n  );\r\n\r\n  const getNextStep = useCallback(\r\n    (step = currentStep) => step && orderedSteps[stepIndex(step) + 1],\r\n    [currentStep, stepIndex, orderedSteps]\r\n  );\r\n\r\n  const getNthStep = useCallback(\r\n    (n: number) => orderedSteps[n - 1],\r\n    [orderedSteps]\r\n  );\r\n\r\n  const isFirstStep = useMemo(\r\n    () => currentStep === getFirstStep(),\r\n    [currentStep, getFirstStep]\r\n  );\r\n\r\n  const isLastStep = useMemo(\r\n    () => currentStep === getLastStep(),\r\n    [currentStep, getLastStep]\r\n  );\r\n\r\n  const registerStep = useCallback((step: Step) => {\r\n    dispatch({ type: \"register\", step });\r\n  }, []);\r\n\r\n  const unregisterStep = useCallback((stepName: string) => {\r\n    dispatch({ type: \"unregister\", stepName });\r\n  }, []);\r\n\r\n  return {\r\n    currentStepNumber,\r\n    totalStepsNumber,\r\n    getFirstStep,\r\n    getLastStep,\r\n    getPrevStep,\r\n    getNextStep,\r\n    getNthStep,\r\n    isFirstStep,\r\n    isLastStep,\r\n    currentStep,\r\n    setCurrentStepState,\r\n    steps,\r\n    registerStep,\r\n    unregisterStep,\r\n  };\r\n};\r\n","import React, { type FunctionComponent } from \"react\";\r\nimport { type NativeMethods } from \"react-native/types\";\r\n\r\ninterface CopilotType {\r\n  ref?: React.RefObject<NativeMethods>;\r\n  onLayout?: () => void;\r\n}\r\n\r\nexport function walkthroughable<P = any>(\r\n  WrappedComponent: React.ComponentType<P>,\r\n) {\r\n  const Component: FunctionComponent<P> = (props: P) => {\r\n    const { copilot, ...rest } = props as { copilot: CopilotType } & P;\r\n    return <WrappedComponent {...copilot} {...(rest as any)} />;\r\n  };\r\n\r\n  Component.displayName = \"Walkthroughable\";\r\n\r\n  return Component;\r\n}\r\n","import React, { useEffect, useMemo, useRef } from \"react\";\r\nimport { type NativeMethods } from \"react-native\";\r\n\r\nimport { useCoachMark } from \"../contexts/CoachMarkProvider\";\r\n\r\ninterface Props {\r\n  name: string;\r\n  order: number;\r\n  text: React.ReactElement<any> | string;\r\n  children: React.ReactElement<any>;\r\n  active?: boolean;\r\n  verison?: string | number;\r\n}\r\n\r\n/**\r\n * \r\n * @props name: string - Unique id for step\r\n * @props order: number - Order of step\r\n * @props text: React.ReactElement<any> | string - String or React element to display in tooltip\r\n * @props children: React.ReactElement<any> - Child element to wrap with copilot\r\n * @props active?: boolean - If step is active\r\n * @props verison?: string | number - Change this prop to force update the component\r\n * @returns \r\n */\r\n\r\nexport const CoachMarkStep = ({\r\n  name,\r\n  order,\r\n  text,\r\n  children,\r\n  active = true,\r\n  verison = undefined\r\n}: Props) => {\r\n  const registeredName = useRef<string | null>(null);\r\n  const { registerStep, unregisterStep } = useCoachMark();\r\n  const wrapperRef = React.useRef<NativeMethods | null>(null);\r\n\r\n  const measure = async () => {\r\n    return await new Promise<{\r\n      x: number;\r\n      y: number;\r\n      width: number;\r\n      height: number;\r\n    }>((resolve) => {\r\n      const measure = () => {\r\n        // Wait until the wrapper element appears\r\n        if (wrapperRef.current != null && \"measure\" in wrapperRef.current) {\r\n          wrapperRef.current.measure((_ox, _oy, width, height, x, y) => {\r\n            resolve({\r\n              x,\r\n              y,\r\n              width,\r\n              height,\r\n            });\r\n          });\r\n        } else {\r\n          requestAnimationFrame(measure);\r\n        }\r\n      };\r\n\r\n      measure();\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (active) {\r\n      if (registeredName.current && registeredName.current !== name) {\r\n        unregisterStep(registeredName.current);\r\n      }\r\n      registerStep({\r\n        name,\r\n        text,\r\n        order,\r\n        measure,\r\n        wrapperRef,\r\n        visible: true,\r\n      });\r\n      registeredName.current = name;\r\n    }\r\n  }, [name, order, registerStep, unregisterStep, active, verison]); //listing for text changes and it is and component then it will cause infinite loop\r\n\r\n  useEffect(() => {\r\n    if (active) {\r\n      return () => {\r\n        if (registeredName.current) {\r\n          unregisterStep(registeredName.current);\r\n        }\r\n      };\r\n    }\r\n  }, [name, unregisterStep, active]);\r\n\r\n  const copilotProps = useMemo(\r\n    () => ({\r\n      ref: wrapperRef,\r\n      onLayout: () => {}, // Android hack\r\n    }),\r\n    []\r\n  );\r\n\r\n  return React.cloneElement(children, { copilot: copilotProps });\r\n};\r\n"],"mappings":"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","names":["import_react","import_react_native","React","Svg","import_react","import_react_native","React","import_react","import_react_native","import_react","import_react_native","import_react","import_react_native","import_react","import_react_native","import_react_native","React","React","CoachMarkModal","React","import_react","import_react","mitt","_a","currentStep","React","React","import_react","React","import_react","React","measure"]}